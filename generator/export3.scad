module export() {
	minkowski() { rotate([45,135,0]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; rotate([90,0,0]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); rotate([0,0,90]) cube([1,1,5],center=true); } //0-GemCylinderRectangle
	minkowski() { rotate([0,90,45]) cylinder(1.5,1.5,1.5,$fn=3,center=true); rotate([90,0,90]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); rotate([0,45,135]) cylinder(3,3,0,$fn=4,center=true); } //1-CheeseCylinderPyramid
	minkowski() { rotate([0,135,45]) cylinder(1.5,1.5,1.5,$fn=3,center=true); rotate([45,135,0]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); rotate([0,45,0]) cube([1,1,5],center=true); } //2-CheeseCylinderRectangle
	minkowski() { rotate([135,135,90]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; rotate([45,90,45]) cube([1,1,5],center=true); rotate([0,0,135]) cylinder(1.5,1.5,1.5,$fn=3,center=true); } //3-GemRectangleCheese
	minkowski() { rotate([45,45,45]) cube([1,1,5],center=true); rotate([45,45,135]) cylinder(3,3,0,$fn=4,center=true); rotate([135,135,0]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; } //4-RectanglePyramidGem
	minkowski() { rotate([0,90,45]) cube([1,1,5],center=true); rotate([135,90,135]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; rotate([0,90,0]) cylinder(5,5,1,$fn=4,center=true); } //5-RectangleGemKilo
	minkowski() { rotate([135,0,45]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } rotate([135,90,45]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); sphere(r=2,$fn=40); } //6-CrossCylinderSphere
	minkowski() { rotate([0,90,0]) cylinder(3,3,0,$fn=4,center=true); sphere(r=2,$fn=40); rotate([90,90,0]) cylinder(1.5,1.5,1.5,$fn=3,center=true); } //7-PyramidSphereCheese
	minkowski() { rotate([45,90,135]) cylinder(1.5,1.5,1.5,$fn=3,center=true); rotate([135,0,90]) cube([1,1,5],center=true); sphere(r=2,$fn=40); } //8-CheeseRectangleSphere
	minkowski() { rotate([0,135,135]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } rotate([90,90,135]) cube([1,1,5],center=true); rotate([45,90,45]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; } //9-CrossRectangleGem
	minkowski() { rotate([0,45,0]) cube([1,1,5],center=true); rotate([135,135,135]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } rotate([135,0,0]) cylinder(1.5,1.5,1.5,$fn=3,center=true); } //10-RectangleCrossCheese
	minkowski() { rotate([90,45,135]) cylinder(3,3,0,$fn=4,center=true); rotate([90,135,0]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; rotate([135,0,90]) cylinder(1.5,1.5,1.5,$fn=3,center=true); } //11-PyramidGemCheese
	minkowski() { rotate([0,45,0]) cylinder(1.5,1.5,1.5,$fn=3,center=true); rotate([135,90,0]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } sphere(r=2,$fn=40); } //12-CheeseCrossSphere
	minkowski() { rotate([0,0,135]) cylinder(3,3,0,$fn=4,center=true); sphere(r=2,$fn=40); rotate([45,135,0]) cylinder(1.5,1.5,1.5,$fn=3,center=true); } //13-PyramidSphereCheese
	minkowski() { rotate([45,90,0]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; rotate([135,90,0]) cylinder(5,5,1,$fn=4,center=true); sphere(r=2,$fn=40); } //14-GemKiloSphere
	minkowski() { rotate([45,135,90]) cube([1,1,5],center=true); rotate([0,135,90]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; rotate([0,135,135]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); } //15-RectangleGemCylinder
	minkowski() { rotate([135,90,45]) cylinder(1.5,1.5,1.5,$fn=3,center=true); rotate([45,0,45]) cube([1,1,5],center=true); sphere(r=2,$fn=40); } //16-CheeseRectangleSphere
	minkowski() { rotate([0,90,135]) cylinder(5,5,1,$fn=4,center=true); sphere(r=2,$fn=40); rotate([90,90,135]) cube([1,1,5],center=true); } //17-KiloSphereRectangle
	minkowski() { rotate([90,90,135]) cube([1,1,5],center=true); rotate([135,0,45]) cylinder(5,5,1,$fn=4,center=true); rotate([135,135,135]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); } //18-RectangleKiloCylinder
	minkowski() { rotate([135,45,135]) cube([1,1,5],center=true); sphere(r=2,$fn=40); rotate([45,90,45]) cylinder(3,3,0,$fn=4,center=true); } //19-RectangleSpherePyramid
	minkowski() { rotate([45,45,0]) cylinder(3,3,0,$fn=4,center=true); rotate([135,90,45]) cube([1,1,5],center=true); sphere(r=2,$fn=40); } //20-PyramidRectangleSphere
	minkowski() { rotate([0,45,135]) cylinder(3,3,0,$fn=4,center=true); rotate([0,45,90]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } rotate([45,135,135]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; } //21-PyramidCrossGem
	minkowski() { rotate([0,90,45]) cylinder(1.5,1.5,1.5,$fn=3,center=true); rotate([45,45,135]) cylinder(3,3,0,$fn=4,center=true); rotate([90,0,135]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } } //22-CheesePyramidCross
	minkowski() { rotate([90,135,90]) cylinder(3,3,0,$fn=4,center=true); rotate([45,90,135]) cube([1,1,5],center=true); rotate([45,0,90]) cylinder(5,5,1,$fn=4,center=true); } //23-PyramidRectangleKilo
	minkowski() { rotate([135,45,135]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } rotate([45,45,45]) cylinder(1.5,1.5,1.5,$fn=3,center=true); sphere(r=2,$fn=40); } //24-CrossCheeseSphere
	minkowski() { rotate([135,0,45]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); rotate([135,0,135]) cylinder(5,5,1,$fn=4,center=true); rotate([135,45,45]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; } //25-CylinderKiloGem
	minkowski() { rotate([135,90,45]) cylinder(3,3,0,$fn=4,center=true); rotate([135,135,90]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; rotate([90,135,135]) cylinder(5,5,1,$fn=4,center=true); } //26-PyramidGemKilo
	minkowski() { rotate([135,0,0]) cylinder(5,5,1,$fn=4,center=true); rotate([90,45,90]) cylinder(3,3,0,$fn=4,center=true); rotate([45,0,90]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); } //27-KiloPyramidCylinder
	minkowski() { rotate([135,0,135]) cylinder(3,3,0,$fn=4,center=true); rotate([0,90,45]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } rotate([45,135,135]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; } //28-PyramidCrossGem
	minkowski() { rotate([0,135,45]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; sphere(r=2,$fn=40); rotate([45,135,0]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } } //29-GemSphereCross
	minkowski() { rotate([90,90,135]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; rotate([0,0,90]) cylinder(3,3,0,$fn=4,center=true); rotate([0,90,45]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } } //30-GemPyramidCross
	minkowski() { rotate([45,135,90]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; rotate([0,90,135]) cylinder(5,5,1,$fn=4,center=true); rotate([135,90,135]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } } //31-GemKiloCross
	minkowski() { rotate([90,0,0]) cube([1,1,5],center=true); rotate([90,135,0]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); rotate([90,0,0]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } } //32-RectangleCylinderCross
	minkowski() { rotate([0,45,90]) cylinder(3,3,0,$fn=4,center=true); rotate([45,45,45]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; sphere(r=2,$fn=40); } //33-PyramidGemSphere
	minkowski() { rotate([0,45,45]) cube([1,1,5],center=true); rotate([0,135,0]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; rotate([0,135,45]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); } //34-RectangleGemCylinder
	minkowski() { sphere(r=2,$fn=40); rotate([135,45,90]) cylinder(5,5,1,$fn=4,center=true); rotate([45,90,45]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } } //35-SphereKiloCross
	minkowski() { sphere(r=2,$fn=40); rotate([90,45,45]) cylinder(3,3,0,$fn=4,center=true); rotate([90,90,0]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); } //36-SpherePyramidCylinder
	minkowski() { rotate([135,45,0]) cylinder(3,3,0,$fn=4,center=true); sphere(r=2,$fn=40); rotate([0,135,45]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); } //37-PyramidSphereCylinder
	minkowski() { rotate([90,90,90]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } rotate([0,0,135]) cylinder(1.5,1.5,1.5,$fn=3,center=true); rotate([0,0,90]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; } //38-CrossCheeseGem
	minkowski() { rotate([135,135,0]) cylinder(1.5,1.5,1.5,$fn=3,center=true); rotate([90,90,90]) cylinder(3,3,0,$fn=4,center=true); rotate([45,135,0]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); } //39-CheesePyramidCylinder
	minkowski() { rotate([90,0,45]) cylinder(5,5,1,$fn=4,center=true); rotate([135,135,0]) cylinder(1.5,1.5,1.5,$fn=3,center=true); sphere(r=2,$fn=40); } //40-KiloCheeseSphere
	minkowski() { rotate([90,45,135]) cylinder(1.5,1.5,1.5,$fn=3,center=true); rotate([135,45,0]) cube([1,1,5],center=true); sphere(r=2,$fn=40); } //41-CheeseRectangleSphere
	minkowski() { sphere(r=2,$fn=40); rotate([135,90,45]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); rotate([135,90,0]) cylinder(1.5,1.5,1.5,$fn=3,center=true); } //42-SphereCylinderCheese
	minkowski() { rotate([90,45,90]) union() { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); mirror([0,0,1]) { cylinder(h=2, r1=2, r2=0, $fn=4); rotate([0,0,45]) cylinder(h=2, r1=2, r2=0, $fn=4); } }; rotate([135,45,45]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } rotate([45,0,45]) cylinder(3,3,0,$fn=4,center=true); } //43-GemCrossPyramid
	minkowski() { rotate([0,90,90]) cube([1,1,5],center=true); sphere(r=2,$fn=40); rotate([45,135,135]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } } //44-RectangleSphereCross
	minkowski() { rotate([0,90,0]) cylinder(3,3,0,$fn=4,center=true); rotate([90,0,45]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); rotate([90,135,0]) cylinder(5,5,1,$fn=4,center=true); } //45-PyramidCylinderKilo
	minkowski() { rotate([135,90,135]) cylinder(3,3,0,$fn=4,center=true); sphere(r=2,$fn=40); rotate([45,45,90]) cylinder(1.5,1.5,1.5,$fn=3,center=true); } //46-PyramidSphereCheese
	minkowski() { sphere(r=2,$fn=40); rotate([45,135,0]) cylinder(3,3,0,$fn=4,center=true); rotate([135,0,0]) cylinder(5,5,1,$fn=4,center=true); } //47-SpherePyramidKilo
	minkowski() { rotate([90,45,90]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } rotate([45,90,90]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); rotate([90,0,90]) cylinder(1.5,1.5,1.5,$fn=3,center=true); } //48-CrossCylinderCheese
	minkowski() { rotate([90,45,45]) union() { cube([4,1,1],center=true); rotate([0,90,0]) { cube([4,1,1],center=true); }; } rotate([45,135,135]) cylinder(h=5,r1=1,r2=1,$fn=40,center=true); sphere(r=2,$fn=40); } //49-CrossCylinderSphere
}
